Statements in server file



# user page
		# get "/user/:id"
		# params [:id]
		# erb :user
		# end

     	# post "/new" do

      #   redirects('/post/:id')
      # end

# viewing the post
	   # 	get "/post/:id" do
    #     @id = db.exec_params("SELECT * FROM posts WHERE id = #{params["id"].to_i}").first
	   #   	erb :post
		  # end

# # adding a comment
    #  get "/comment" do
      # erb :comment
    # end

	   # post "/comment" do
       # redirect? 
    # end


# for category.erb 
# <% @category.each do |post| %>
# 		<a href = "/post/<%="#{post['id']}"%>">
# 			<%= "#{post["topic_name"]}"%>
# 		</a>






showing only items with that category 

  get "/house/:id" do 
      @houseid = params[:id]
      @house = db.exec_params("SELECT * FROM houses WHERE id = #{params["id"].to_i}").first
      @students = db.exec_params("SELECT * FROM students WHERE house_id = #{@houseid}").to_a
      erb :house 
    end

    in erb file
    <div class = roster>
<% @students.each do |student| %>
  <div class = student>
  <h1> <%= "#{student['fname']} #{student['lname']}"%></h1>

  <img src = <%= "#{student['image']}" %> />
  </div>

<% end %>



login/signup in server file

class LoginServer < Sinatra::Base

  enable :sessions

  @@db = PG.connect(dbname: "login_magnum")

  def current_user 
    if session ["user_id"]
      # the user is logged in
      @users ||= @@db.exec_params(<<-SQL,[session["user_id"]])
      SELECT * FROM users WHERE id = $1
      SQL
    else 
      # the user is not logged in
      {}
    end
  end

  get "/" do 
    redirect "/signup"
  end

  


# authenticating users 

  get '/login' do
    erb :login
  end

  post '/login' do
    users = @@db.exec_params(<<-SQL, [params[:login_name]])
      SELECT * FROM users WHERE login_name = $1
    SQL

    if @user  
        if BCrypt::Password.new(@user["login_password_digest"]) == params[:login_password]
        session["user_id"] = @user["id"]
        erb :login_success
    else 
      @error = "Invalid Password"
      erb :login
    end 
    else 
      @error = "Invalid Username"
      erb :login 
    end
  end
end


# # view a list of categories
#     get "/categories" do
#       @categories = db.exec("SELECT * FROM categories")
#     erb :categories
#     end

# # view a list of posts in that category
#     get "/category/:id" do
#       @category = db.exec("SELECT topic_name FROM posts WHERE category_id = #{params["id"].to_i}").first
#     erb :category
#     end 



from layout file
        <li><a href="/categories">Categories</a></li>


from seeds file
# creates table for categories

# conn.exec("DROP TABLE IF EXISTS categories")

# conn.exec("CREATE TABLE categories(
#     id SERIAL PRIMARY KEY,
#     name VARCHAR(255),
#     number_of_posts INT
#   )"
# )



from posts table

    comments INT,
    votes INT,
    content VARCHAR,
    user_id INT REFERENCES users(id)